# generated by datamodel-codegen:
#   filename:  schemas.json
#   timestamp: 2022-02-23T09:22:38+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Extra


# insert
import stringcase
def to_sentence(string: str) -> str:
    return stringcase.sentencecase(string).lower()

class BaseModel(BaseModel):
    class Config:
        alias_generator = to_sentence
        allow_population_by_field_name = True
# ----

class AnalyticSession(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionDate: Optional[datetime] = None
    readingType: Optional[str] = None
    electricUse: Optional[float] = None
    nonElectricUse: Optional[float] = None
    renewableUse: Optional[float] = None
    calculatedEnergyCarbon: Optional[float] = None
    isSelectedSession: Optional[bool] = None


class ProjectAnalyticsBundle(BaseModel):
    class Config:
        extra = Extra.forbid

    analyticsSessions: Optional[List[AnalyticSession]] = None


class SectorInput(BaseModel):
    class Config:
        extra = Extra.forbid

    sectorId: Optional[int] = None
    sectorName: Optional[str] = None


class TypeInput(BaseModel):
    class Config:
        extra = Extra.forbid

    typeId: Optional[int] = None
    typeName: Optional[str] = None


class EnergyAnalyticsFilters(BaseModel):
    class Config:
        extra = Extra.forbid

    useDesignStageRecords: Optional[bool] = None
    scaleVariable: Optional[int] = None
    useCommonDecData: Optional[bool] = None
    maxRecords: Optional[int] = None
    maxDecRecords: Optional[int] = None
    validSectors: Optional[List[SectorInput]] = None
    validTypologies: Optional[List[TypeInput]] = None
    validYears: Optional[List[int]] = None
    minGia: Optional[float] = None
    maxGia: Optional[float] = None
    allGias: Optional[bool] = None
    allYears: Optional[bool] = None
    allSectors: Optional[bool] = None
    allTypes: Optional[bool] = None


class CumulativeDataUnit(BaseModel):
    class Config:
        extra = Extra.forbid

    energy: Optional[float] = None
    cumulativePercentageElectricUse: Optional[float] = None
    cumulativePercentageNonElectricUse: Optional[float] = None
    cumulativePercentageRenewables: Optional[float] = None
    cumulativePercentageTotal: Optional[float] = None


class HistogramDataUnit(BaseModel):
    class Config:
        extra = Extra.forbid

    rangeStart: Optional[float] = None
    rangeEnd: Optional[float] = None
    count: Optional[int] = None


class Histogram(BaseModel):
    class Config:
        extra = Extra.forbid

    electricHistogram: Optional[List[HistogramDataUnit]] = None
    nonElectricHistogram: Optional[List[HistogramDataUnit]] = None
    renewableHistogram: Optional[List[HistogramDataUnit]] = None
    totalHistogram: Optional[List[HistogramDataUnit]] = None


class AuthBundle(BaseModel):
    class Config:
        extra = Extra.forbid

    appIdent: Optional[str] = None
    apiKey: Optional[str] = None
    claimantSid: Optional[str] = None
    claimantName: Optional[str] = None


class TokenBundle(BaseModel):
    class Config:
        extra = Extra.forbid

    token: Optional[str] = None
    expiry: Optional[datetime] = None


class ProjectCollaboratorCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = None
    permissionLevel: Optional[str] = None
    companyReferenceForProject: Optional[str] = None
    projectId: Optional[UUID] = None


class CreationOutcome(BaseModel):
    class Config:
        extra = Extra.forbid

    createdOk: Optional[bool] = None
    resourceId: Optional[str] = None
    resourceUri: Optional[str] = None
    errors: Optional[List[str]] = None
    warnings: Optional[List[str]] = None
    messages: Optional[List[str]] = None


class ProjectCollaboratorModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = None
    permissionLevel: Optional[str] = None
    companyReferenceForProject: Optional[str] = None
    collaboratorInstanceId: Optional[UUID] = None


class ModificationOutcome(BaseModel):
    class Config:
        extra = Extra.forbid

    modifiedOk: Optional[bool] = None
    resourceUri: Optional[str] = None
    modifiedTime: Optional[datetime] = None
    errors: Optional[List[str]] = None
    warnings: Optional[List[str]] = None
    messages: Optional[List[str]] = None


class CommonFilters(BaseModel):
    class Config:
        extra = Extra.forbid

    useDesignStageRecords: Optional[bool] = None
    maxRecords: Optional[int] = None
    maxDecRecords: Optional[int] = None
    validSectors: Optional[List[SectorInput]] = None
    validTypologies: Optional[List[TypeInput]] = None
    validYears: Optional[List[int]] = None
    minGia: Optional[float] = None
    maxGia: Optional[float] = None
    allGias: Optional[bool] = None
    allYears: Optional[bool] = None
    allSectors: Optional[bool] = None
    allTypes: Optional[bool] = None


class LuSectors(BaseModel):
    class Config:
        extra = Extra.forbid

    sectorId: Optional[int] = None
    name: Optional[str] = None


class SectorsInCommonDecData(BaseModel):
    class Config:
        extra = Extra.forbid

    sectorsInCommonDecDataId: Optional[UUID] = None
    commonDecDataId: Optional[UUID] = None
    sectorId: Optional[int] = None
    sector: Optional[LuSectors] = None


class LuTypes(BaseModel):
    class Config:
        extra = Extra.forbid

    typeId: Optional[int] = None
    name: Optional[str] = None


class TypesInCommonDecData(BaseModel):
    class Config:
        extra = Extra.forbid

    typesInCommonDecDataId: Optional[UUID] = None
    commonDecDataId: Optional[UUID] = None
    typeId: Optional[int] = None
    type: Optional[LuTypes] = None


class CommonDecData(BaseModel):
    class Config:
        extra = Extra.forbid

    commonDecDataId: Optional[UUID] = None
    siteOrGroupName: Optional[str] = None
    buildingName: Optional[str] = None
    decBuildingRef: Optional[str] = None
    decNumber: Optional[str] = None
    readingDate: Optional[datetime] = None
    grossInternalArea: Optional[float] = None
    totalAnnualElectricityUse: Optional[float] = None
    totalAnnualNonElectricUse: Optional[float] = None
    totalRenewableContribution: Optional[float] = None
    operationalEnergyTotal: Optional[float] = None
    postcode: Optional[str] = None
    address: Optional[str] = None
    regionId: Optional[UUID] = None
    sectors: Optional[List[SectorsInCommonDecData]] = None
    types: Optional[List[TypesInCommonDecData]] = None


class ProjectSession(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionId: Optional[UUID] = None
    projectId: Optional[UUID] = None
    dateCreated: Optional[datetime] = None
    dateModified: Optional[datetime] = None
    grossInternalArea: Optional[float] = None
    calculationSoftware: Optional[str] = None
    notes: Optional[str] = None
    isDesignStage: Optional[bool] = None
    isFinalDesign: Optional[bool] = None


class EmbodiedCarbonFigures(BaseModel):
    class Config:
        extra = Extra.forbid

    embodiedCarbonFiguresId: Optional[UUID] = None
    totalEmbodiedCarbon: Optional[float] = None
    aOneToThree: Optional[float] = None
    aOneToThreeSequestered: Optional[float] = None
    aFour: Optional[float] = None
    aFive: Optional[float] = None
    bOneToThree: Optional[float] = None
    bFourAndFive: Optional[float] = None
    cOneToFour: Optional[float] = None
    d: Optional[float] = None
    sessionId: Optional[UUID] = None
    session: Optional[ProjectSession] = None
    figuresAreValid: Optional[bool] = None


class EmbodiedCarbonCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    totalEmbodiedCarbon: Optional[float] = None
    aOneToThree: Optional[float] = None
    aOneToThreeSequestered: Optional[float] = None
    aFour: Optional[float] = None
    aFive: Optional[float] = None
    bOneToThree: Optional[float] = None
    bFourAndFive: Optional[float] = None
    cOneToFour: Optional[float] = None
    d: Optional[float] = None
    componentsCalculateTotal: Optional[bool] = None
    sessionId: Optional[UUID] = None


class EmbodiedCarbonModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    totalEmbodiedCarbon: Optional[float] = None
    aOneToThree: Optional[float] = None
    aOneToThreeSequestered: Optional[float] = None
    aFour: Optional[float] = None
    aFive: Optional[float] = None
    bOneToThree: Optional[float] = None
    bFourAndFive: Optional[float] = None
    cOneToFour: Optional[float] = None
    d: Optional[float] = None
    componentsCalculateTotal: Optional[bool] = None
    embodiedCarbonFiguresId: Optional[UUID] = None


class ProjectGroupSectors(BaseModel):
    class Config:
        extra = Extra.forbid

    projectGroupSectorId: Optional[UUID] = None
    groupId: Optional[UUID] = None
    sectorId: Optional[int] = None
    sector: Optional[LuSectors] = None
    isPrimarySector: Optional[bool] = None


class ProjectGroupTypes(BaseModel):
    class Config:
        extra = Extra.forbid

    projectGroupTypeId: Optional[UUID] = None
    groupId: Optional[UUID] = None
    typeId: Optional[int] = None
    type: Optional[LuTypes] = None


class DisplayGroup(BaseModel):
    class Config:
        extra = Extra.forbid

    groupId: Optional[UUID] = None
    projectId: Optional[UUID] = None
    groupName: Optional[str] = None
    grossInternalArea: Optional[float] = None
    sectorsAndTypesOverwriteProject: Optional[bool] = None
    groupSectors: Optional[List[ProjectGroupSectors]] = None
    groupTypes: Optional[List[ProjectGroupTypes]] = None


class SectorShell(BaseModel):
    class Config:
        extra = Extra.forbid

    sectorId: Optional[int] = None
    sectorName: Optional[str] = None
    isPrimary: Optional[bool] = None


class TypeShell(BaseModel):
    class Config:
        extra = Extra.forbid

    typeId: Optional[int] = None
    typeName: Optional[str] = None


class GroupCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    groupName: Optional[str] = None
    grossInternalArea: Optional[float] = None
    sectors: Optional[List[SectorShell]] = None
    types: Optional[List[TypeShell]] = None
    autoUpdateProjectSectorsAndTypes: Optional[bool] = None
    groupSectorTypesOverrideProjectOnes: Optional[bool] = None
    projectId: Optional[UUID] = None


class GroupAdditionPreferences(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionId: Optional[UUID] = None
    groupId: Optional[UUID] = None
    sessionAdoptsGroupGia: Optional[bool] = None


class GroupModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    groupName: Optional[str] = None
    grossInternalArea: Optional[float] = None
    sectors: Optional[List[SectorShell]] = None
    types: Optional[List[TypeShell]] = None
    autoUpdateProjectSectorsAndTypes: Optional[bool] = None
    groupSectorTypesOverrideProjectOnes: Optional[bool] = None
    groupId: Optional[UUID] = None


class OperationalEnergyCarbon(BaseModel):
    class Config:
        extra = Extra.forbid

    carbonUseable: Optional[bool] = None
    electricCarbon: Optional[float] = None
    nonElectricCarbon: Optional[float] = None
    totalCarbon: Optional[float] = None
    errors: Optional[List[str]] = None


class OperationalEnergyComponentModification(BaseModel):
    class Config:
        extra = Extra.forbid

    use: Optional[str] = None
    amountConsumedOrGenerated: Optional[float] = None
    category: Optional[str] = None
    componentId: Optional[UUID] = None


class FuelMix(BaseModel):
    class Config:
        extra = Extra.forbid

    fuelTypeId: Optional[int] = None
    fuelType: Optional[str] = None
    mixAmount: Optional[float] = None


class FuelPoweredEnergyComponentModification(BaseModel):
    class Config:
        extra = Extra.forbid

    use: Optional[str] = None
    amountConsumedOrGenerated: Optional[float] = None
    category: Optional[str] = None
    componentValid: Optional[bool] = None
    componentId: Optional[UUID] = None
    fuelMix: Optional[List[FuelMix]] = None


class EnergyReadings(BaseModel):
    class Config:
        extra = Extra.forbid

    operationalEnergyReadingId: Optional[UUID] = None
    readingsAreValid: Optional[bool] = None
    totalElectricityUse: Optional[float] = None
    totalNonElectricUse: Optional[float] = None
    totalRenewableContribution: Optional[float] = None
    total: Optional[float] = None
    electricEnergyConsumers: Optional[
        List[OperationalEnergyComponentModification]
    ] = None
    nonElectricEnergyConsumers: Optional[
        List[FuelPoweredEnergyComponentModification]
    ] = None
    powerGenerators: Optional[List[OperationalEnergyComponentModification]] = None
    electricComponentTotal: Optional[float] = None
    nonElectricComponentTotal: Optional[float] = None
    renewableComponentTotal: Optional[float] = None
    selectedCarbonFactor: Optional[UUID] = None


class OperationalEnergyComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    use: Optional[str] = None
    amountConsumedOrGenerated: Optional[float] = None
    category: Optional[str] = None


class FuelPoweredEnergyComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    use: Optional[str] = None
    amountConsumedOrGenerated: Optional[float] = None
    category: Optional[str] = None
    fuelMix: Optional[List[FuelMix]] = None


class OperationalEnergyCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    totalElectricityUse: Optional[float] = None
    totalNonElectricUse: Optional[float] = None
    totalRenewableContribution: Optional[float] = None
    total: Optional[float] = None
    carbonFactorGapMode: Optional[str] = None
    carbonFactorId: Optional[UUID] = None
    sessionId: UUID
    electricEnergyConsumers: Optional[List[OperationalEnergyComponent]] = None
    nonElectricEnergyConsumers: Optional[List[FuelPoweredEnergyComponent]] = None
    powerGenerators: Optional[List[OperationalEnergyComponent]] = None


class OperationalEnergyModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    totalElectricityUse: Optional[float] = None
    totalNonElectricUse: Optional[float] = None
    totalRenewableContribution: Optional[float] = None
    total: Optional[float] = None
    carbonFactorGapMode: Optional[str] = None
    carbonFactorId: Optional[UUID] = None
    operationalEnergyReadingId: UUID
    electricEnergyConsumers: Optional[
        List[OperationalEnergyComponentModification]
    ] = None
    nonElectricEnergyConsumers: Optional[
        List[FuelPoweredEnergyComponentModification]
    ] = None
    powerGenerators: Optional[List[OperationalEnergyComponentModification]] = None


class ProjectTypes(BaseModel):
    class Config:
        extra = Extra.forbid

    projectTypeId: Optional[UUID] = None
    projectId: Optional[UUID] = None
    typeId: Optional[int] = None
    type: Optional[LuTypes] = None


class DisplayCompaniesOnProject(BaseModel):
    class Config:
        extra = Extra.forbid

    permissionLevel: Optional[str] = None
    company: Optional[str] = None


class DisplaySession(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionId: Optional[UUID] = None
    projectId: Optional[UUID] = None
    dateCreated: Optional[datetime] = None
    dateModified: Optional[datetime] = None
    grossInternalArea: Optional[float] = None
    calculationSoftware: Optional[str] = None
    notes: Optional[str] = None
    isDesignStage: Optional[bool] = None
    isFinalDesign: Optional[bool] = None
    methodology: Optional[str] = None
    sessionDate: Optional[str] = None
    energyId: Optional[UUID] = None
    carbonId: Optional[UUID] = None


class ProjectCollaboratorShell(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = None
    permissionLevel: Optional[str] = None
    companyReferenceForProject: Optional[str] = None


class ProjectCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    handoverDate: Optional[str] = None
    accessType: Optional[str] = None
    referenceKey: Optional[str] = None
    region: Optional[str] = None
    name: str
    sharedWith: Optional[List[ProjectCollaboratorShell]] = None


class ProblemDetails(BaseModel):
    class Config:
        extra = Extra.allow

    type: Optional[str] = None
    title: Optional[str] = None
    status: Optional[int] = None
    detail: Optional[str] = None
    instance: Optional[str] = None


class ProjectModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    handoverDate: Optional[str] = None
    accessType: Optional[str] = None
    referenceKey: Optional[str] = None
    region: Optional[str] = None
    projectId: UUID
    name: Optional[str] = None


class BenchmarkZone(BaseModel):
    class Config:
        extra = Extra.forbid

    zoneStart: float
    zoneEnd: float
    zoneName: str
    zoneColour: Optional[str] = None
    zoneOpacity: Optional[float] = None
    zoneId: Optional[UUID] = None


class BenchmarkFrame(BaseModel):
    class Config:
        extra = Extra.forbid

    benchmarkName: Optional[str] = None
    validRangeStart: Optional[float] = None
    validRangeEnd: Optional[float] = None
    benchmarkFor: Optional[str] = None
    units: Optional[str] = None
    zones: Optional[List[BenchmarkZone]] = None


class RangeBenchmarkZoneShell(BaseModel):
    class Config:
        extra = Extra.forbid

    zoneStart: float
    zoneEnd: float
    zoneName: str
    zoneColour: Optional[str] = None
    zoneOpacity: Optional[float] = None


class RangeBenchmarkCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    validRangeStart: Optional[float] = None
    validRangeEnd: Optional[float] = None
    type: str
    zones: Optional[List[RangeBenchmarkZoneShell]] = None


class RangeBenchmarkZoneModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    zoneStart: float
    zoneEnd: float
    zoneName: str
    zoneColour: Optional[str] = None
    zoneOpacity: Optional[float] = None
    zoneId: Optional[UUID] = None


class RangeBenchmarkModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    validRangeStart: Optional[float] = None
    validRangeEnd: Optional[float] = None
    id: UUID
    zones: Optional[List[RangeBenchmarkZoneModificationShell]] = None


class PointsOfInterestInRegions(BaseModel):
    class Config:
        extra = Extra.forbid

    pointOfInterestId: Optional[UUID] = None
    pointOfInterestName: Optional[str] = None


class LuRegion(BaseModel):
    class Config:
        extra = Extra.forbid

    regionId: Optional[UUID] = None
    regionName: Optional[str] = None
    pointsOfInterest: Optional[List[PointsOfInterestInRegions]] = None


class ProjectSectorsAndTypes(BaseModel):
    class Config:
        extra = Extra.forbid

    projectName: Optional[str] = None
    projectId: Optional[UUID] = None
    types: Optional[List[LuTypes]] = None
    sectors: Optional[List[LuSectors]] = None


class TypesInSectors(BaseModel):
    class Config:
        extra = Extra.forbid

    typeInSectorId: Optional[UUID] = None
    sectorId: Optional[int] = None
    typeId: Optional[int] = None


class SectorTypeShell(BaseModel):
    class Config:
        extra = Extra.forbid

    projectId: Optional[UUID] = None
    sectors: Optional[List[SectorShell]] = None
    types: Optional[List[TypeShell]] = None


class SessionCreationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionDate: datetime
    readingMethodology: Optional[str] = None
    calculationSoftware: Optional[str] = None
    notes: Optional[str] = None
    grossInternalArea: float
    isDesign: Optional[bool] = None
    projectId: UUID


class AnalyticsSessionShell(BaseModel):
    class Config:
        extra = Extra.forbid

    year: Optional[int] = None
    sessionId: Optional[UUID] = None


class ProjectAnalyticsSessionsShell(BaseModel):
    class Config:
        extra = Extra.forbid

    projectId: Optional[UUID] = None
    analyticsSessions: Optional[List[AnalyticsSessionShell]] = None


class SessionModifictionShell(BaseModel):
    class Config:
        extra = Extra.forbid

    sessionDate: datetime
    readingMethodology: Optional[str] = None
    calculationSoftware: Optional[str] = None
    notes: Optional[str] = None
    grossInternalArea: float
    isDesign: Optional[bool] = None
    sessionId: UUID


class AdditionalStaticCarbonFactors(BaseModel):
    class Config:
        extra = Extra.forbid

    additionalCarbonFactorId: Optional[UUID] = None
    staticCarbonFactorId: Optional[UUID] = None
    additionalMethodology: Optional[str] = None
    additionalCarbonFactor: Optional[float] = None
    additionalFuelName: Optional[str] = None


class StaticCarbonFactors(BaseModel):
    class Config:
        extra = Extra.forbid

    staticCarbonFactorId: Optional[UUID] = None
    forProject: Optional[UUID] = None
    setName: Optional[str] = None
    electricityCarbonFactor: Optional[float] = None
    electricityFactorMethodology: Optional[str] = None
    oilCarbonFactor: Optional[float] = None
    oilFactorMethodology: Optional[str] = None
    gasCarbonFactor: Optional[float] = None
    gasFactorMethodology: Optional[str] = None
    biodieselFromBiomassCarbonFactor: Optional[float] = None
    biodieselFactorMethodology: Optional[str] = None
    coalCarbonFactor: Optional[float] = None
    coalFactorMethodology: Optional[str] = None
    biomassCarbonFactor: Optional[float] = None
    biomassFactorMethodology: Optional[str] = None
    biogasCarbonFactor: Optional[float] = None
    biogasFactorMethodology: Optional[str] = None
    additionalStaticCarbonFactors: Optional[List[AdditionalStaticCarbonFactors]] = None


class OtherStaticCarbonFactor(BaseModel):
    class Config:
        extra = Extra.forbid

    otherFuelName: Optional[str] = None
    otherCarbonFactor: Optional[float] = None
    otherFactorMethodology: Optional[str] = None


class StaticCarbonFactorShell(BaseModel):
    class Config:
        extra = Extra.forbid

    systemWideAddition: Optional[bool] = None
    setName: Optional[str] = None
    electricityCarbonFactor: Optional[float] = None
    electricityFactorMethodology: Optional[str] = None
    oilCarbonFactor: Optional[float] = None
    oilFactorMethodology: Optional[str] = None
    gasCarbonFactor: Optional[float] = None
    gasFactorMethodology: Optional[str] = None
    biodieselFromBiomassCarbonFactor: Optional[float] = None
    biodieselFactorMethodology: Optional[str] = None
    coalCarbonFactor: Optional[float] = None
    coalFactorMethodology: Optional[str] = None
    biomassCarbonFactor: Optional[float] = None
    biomassFactorMethodology: Optional[str] = None
    biogasCarbonFactor: Optional[float] = None
    biogasFactorMethodology: Optional[str] = None
    specificProjectId: Optional[UUID] = None
    otherCarbonFactors: Optional[List[OtherStaticCarbonFactor]] = None


class OtherStaticCarbonFactorModification(BaseModel):
    class Config:
        extra = Extra.forbid

    otherFuelName: Optional[str] = None
    otherCarbonFactor: Optional[float] = None
    otherFactorMethodology: Optional[str] = None
    otherCarbonFactorId: Optional[UUID] = None


class StaticCarbonFactorModificationShell(BaseModel):
    class Config:
        extra = Extra.forbid

    systemWideAddition: Optional[bool] = None
    setName: Optional[str] = None
    electricityCarbonFactor: Optional[float] = None
    electricityFactorMethodology: Optional[str] = None
    oilCarbonFactor: Optional[float] = None
    oilFactorMethodology: Optional[str] = None
    gasCarbonFactor: Optional[float] = None
    gasFactorMethodology: Optional[str] = None
    biodieselFromBiomassCarbonFactor: Optional[float] = None
    biodieselFactorMethodology: Optional[str] = None
    coalCarbonFactor: Optional[float] = None
    coalFactorMethodology: Optional[str] = None
    biomassCarbonFactor: Optional[float] = None
    biomassFactorMethodology: Optional[str] = None
    biogasCarbonFactor: Optional[float] = None
    biogasFactorMethodology: Optional[str] = None
    specificProjectId: Optional[UUID] = None
    otherCarbonFactors: Optional[List[OtherStaticCarbonFactorModification]] = None
    carbonFactorId: Optional[UUID] = None


class YearlyCarbonFactor(BaseModel):
    class Config:
        extra = Extra.forbid

    year: Optional[int] = None
    electricityCarbonFactor: Optional[float] = None
    electricityFactorMethodology: Optional[str] = None
    oilCarbonFactor: Optional[float] = None
    oilFactorMethodology: Optional[str] = None
    gasCarbonFactor: Optional[float] = None
    gasFactorMethodology: Optional[str] = None
    biodieselFromBiomassCarbonFactor: Optional[float] = None
    biodieselFactorMethodology: Optional[str] = None
    coalCarbonFactor: Optional[float] = None
    coalFactorMethodology: Optional[str] = None
    biomassCarbonFactor: Optional[float] = None
    biomassFactorMethodology: Optional[str] = None
    biogasCarbonFactor: Optional[float] = None
    biogasFactorMethodology: Optional[str] = None


class TimeBoundCarbonFactorShell(BaseModel):
    class Config:
        extra = Extra.forbid

    carbonFactorId: Optional[UUID] = None
    setName: Optional[str] = None
    systemWideAddition: Optional[bool] = None
    extrapolateToFillGaps: Optional[bool] = None
    yearlyCarbonFactors: Optional[List[YearlyCarbonFactor]] = None


class YearlyCarbonFactorModifcation(BaseModel):
    class Config:
        extra = Extra.forbid

    year: Optional[int] = None
    electricityCarbonFactor: Optional[float] = None
    electricityFactorMethodology: Optional[str] = None
    oilCarbonFactor: Optional[float] = None
    oilFactorMethodology: Optional[str] = None
    gasCarbonFactor: Optional[float] = None
    gasFactorMethodology: Optional[str] = None
    biodieselFromBiomassCarbonFactor: Optional[float] = None
    biodieselFactorMethodology: Optional[str] = None
    coalCarbonFactor: Optional[float] = None
    coalFactorMethodology: Optional[str] = None
    biomassCarbonFactor: Optional[float] = None
    biomassFactorMethodology: Optional[str] = None
    biogasCarbonFactor: Optional[float] = None
    biogasFactorMethodology: Optional[str] = None
    yearlyCarbonFactorId: Optional[UUID] = None
    timeBoundSetId: Optional[UUID] = None


class Project(BaseModel):
    class Config:
        extra = Extra.forbid

    projectId: Optional[UUID] = None
    name: str
    groupTypesOrSectorsMisaligned: Optional[bool] = None
    createdDate: Optional[datetime] = None
    modifiedDate: Optional[datetime] = None
    creatorCompanyRef: Optional[str] = None
    projectSectors: Optional[List[ProjectSectors]] = None
    projectTypes: Optional[List[ProjectTypes]] = None


class ProjectSectors(BaseModel):
    class Config:
        extra = Extra.forbid

    projectSectorId: Optional[UUID] = None
    projectId: Optional[UUID] = None
    project: Optional[Project] = None
    sectorId: Optional[int] = None
    sector: Optional[LuSectors] = None
    isPrimarySector: Optional[bool] = None


class DisplayProject(BaseModel):
    class Config:
        extra = Extra.forbid

    projectId: Optional[UUID] = None
    name: str
    groupTypesOrSectorsMisaligned: Optional[bool] = None
    createdDate: Optional[datetime] = None
    modifiedDate: Optional[datetime] = None
    creatorCompanyRef: Optional[str] = None
    projectSectors: Optional[List[ProjectSectors]] = None
    projectTypes: Optional[List[ProjectTypes]] = None
    referenceKey: Optional[str] = None
    handoverDate: Optional[str] = None
    region: Optional[str] = None
    accessType: Optional[str] = None
    companiesOnProject: Optional[List[DisplayCompaniesOnProject]] = None
    sessions: Optional[List[DisplaySession]] = None


Project.update_forward_refs()