{
    "openapi": "3.0.1",
    "info": {
        "title": "EnergyTrackerApi",
        "description": "The core logic API for Energy Tracker applications",
        "contact": {
            "name": "Matt Clapham",
            "email": "matt.clapham@fcbstudios.com"
        },
        "version": "v1"
    },
    "paths": {
        "/Analytics/GetProjectAnalyticsBundle": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAnalyticsBundle"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAnalyticsBundle"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAnalyticsBundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Analytics/GetCumulativeEnergyData": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Returns a series of cumulative percentages against a set of energy values for electric, non-electric, renewables and totals in the filtered set.",
                "description": "The scale variable here determines the number of energy values the scale is split over, in kwHr/m2/y.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CumulativeDataUnit"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CumulativeDataUnit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CumulativeDataUnit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Analytics/GetEnergyHistogramData": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Returns an object containing four sets of histogram data, one each for electric, non-electric, renewables and totals in the filtered set",
                "description": "The scale variable here determines the bar range in the histogram, in kwHr/m2/y",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnergyAnalyticsFilters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Histogram"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Histogram"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Histogram"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Authentication/CreateKey": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate a new base 64 encoded AES key",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Authentication/RequestAuthToken": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Allows whitelisted apps to authenticate. Note, one key per application and this key should never be exposed to users.",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthBundle"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthBundle"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthBundle"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenBundle"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenBundle"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenBundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Collaborators/DeleteProjectCollaborator": {
            "delete": {
                "tags": [
                    "Collaborators"
                ],
                "summary": "Remove a project collborator",
                "parameters": [
                    {
                        "name": "collaboratorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Collaborators/AddProjectCollaborator": {
            "post": {
                "tags": [
                    "Collaborators"
                ],
                "summary": "Add a collaborator to a project",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Collaborators/ModifyProjectCollaborator": {
            "put": {
                "tags": [
                    "Collaborators"
                ],
                "summary": "Modifies a project collaborator. Creator companies can modify a collaborator record's permission level and reference. Collaborators can only chnage the reference.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCollaboratorModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CommonData/GetPublicDecData": {
            "post": {
                "tags": [
                    "CommonData"
                ],
                "summary": "Get an array of common dec data, filtered by the common filters object provided.",
                "description": "Valid sectors and types perform an OR match. If either hits, the results will be included. \r\nTo improve speeds, the maximum number of responses is limited to 2000. \r\nIf you pick a MaxDecRecords value of 0, the system will assume the limit is wanted.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommonFilters"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommonFilters"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommonFilters"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommonFilters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommonDecData"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommonDecData"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommonDecData"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EmbodiedCarbon/DeleteEmbodiedCarbonReadings": {
            "delete": {
                "tags": [
                    "EmbodiedCarbon"
                ],
                "parameters": [
                    {
                        "name": "readingId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EmbodiedCarbon/GetEmbodiedCarbonReadings": {
            "get": {
                "tags": [
                    "EmbodiedCarbon"
                ],
                "parameters": [
                    {
                        "name": "readingId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbodiedCarbonFigures"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbodiedCarbonFigures"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbodiedCarbonFigures"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EmbodiedCarbon/AddEmbodiedCarbonReadingsToSession": {
            "post": {
                "tags": [
                    "EmbodiedCarbon"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EmbodiedCarbon/ModifyEmbodiedCarbonReadings": {
            "put": {
                "tags": [
                    "EmbodiedCarbon"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbodiedCarbonModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Fuels/GetFuels": {
            "get": {
                "tags": [
                    "Fuels"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/Group/RemoveGroup": {
            "delete": {
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group/GetProjectGroups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayGroup"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayGroup"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayGroup"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group/AddGroupToProject": {
            "post": {
                "tags": [
                    "Group"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Group/AddSessionToGroup": {
            "post": {
                "tags": [
                    "Group"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupAdditionPreferences"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupAdditionPreferences"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupAdditionPreferences"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupAdditionPreferences"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/Group/ModifyGroup": {
            "put": {
                "tags": [
                    "Group"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Methodology/GetMethodologies": {
            "get": {
                "tags": [
                    "Methodology"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/OperationalEnergy/DeleteEnergyReadingConsumerOrGenerator": {
            "delete": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Remove an energy consumer or generator, including all child data.",
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationalEnergy/DeleteEnergyReadings": {
            "delete": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Removes an entire reading set from a session.",
                "parameters": [
                    {
                        "name": "readingId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationalEnergy/GetEnergyCarbonEmissionsForSession": {
            "get": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Get carbon emissions object for a particular session.",
                "description": "Possible gap handling modes are:  \r\n- Unhandled (no calculations attempted if no yearly or static values for session date)\r\n- UseClosest (Uses the same value as the nearest neighbouring year with a value) \r\n- InferValue (linearly extrapolates the value of gaps by working out the difference between known values over time)",
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "gapMode",
                        "in": "query",
                        "description": "Possible values are: Unhandled, UseClosest, InferValue",
                        "schema": {
                            "type": "string",
                            "description": "Possible values are: Unhandled, UseClosest, InferValue",
                            "default": "Unhandled",
                            "nullable": true
                        }
                    },
                    {
                        "name": "useStored",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "description": "",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationalEnergyCarbon"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationalEnergyCarbon"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationalEnergyCarbon"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationalEnergy/GetEnergyReadings": {
            "get": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Get the energy readings for a given id, including if the system considers them valid for use",
                "parameters": [
                    {
                        "name": "readingId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnergyReadings"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnergyReadings"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnergyReadings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationalEnergy/GetPossibleCarbonFactors": {
            "get": {
                "tags": [
                    "OperationalEnergy"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/OperationalEnergy/AddEnergyReadingsToSession": {
            "post": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Adds an energy reading set to a session.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OperationalEnergy/ModifyEnergyReadings": {
            "put": {
                "tags": [
                    "OperationalEnergy"
                ],
                "summary": "Updates energy readings, inlcuding component uses and fuel mixes (where appropriate). Does not delete anything. Please use the separate delete methods to remove data.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationalEnergyModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Projects/DeleteProject": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Removes a project and all its data. This action cannot be undone, so please use with caution. Only the project's creator is able to remove it (collaborator companies cannot).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "The unique id for the project",
                        "schema": {
                            "type": "string",
                            "description": "The unique id for the project",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Projects/Project": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets project data for a specific project",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "includeSessions",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "includeSectors",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "includeTypes",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayProject"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayProject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayProject"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a project shell record to add data to. Defaults to Anonymised Benchmark security if unspecified.",
                "description": "Sample request:\r\n\r\n    POST /Project\r\n    {        \r\n      \"name\": \"MyProject\",\r\n      \"handoverDate\": \"2021-01-01T10:00:00\",\r\n      \"accessType\": \"shared\",\r\n      \"yourReferenceKey\": \"MyKey\", \r\n      \"sharedWith\": [\r\n        {\r\n            \"name\": \"FCBS\", \r\n            \"permissionLevel\": \"readonly\"\r\n        },\r\n        {\r\n            \"name: \"Max Fordham\", \r\n            \"permissionLevel\": \"readwrite\"\r\n        }\r\n      ]\r\n    }\r\n    \r\nSecurity options are: \r\n- anonymised benchmark (data is used anonymously for benchmarking). This is the default.\r\n- public (all data is shared)\r\n- private (data is only visible by creator company)\r\n- shared (data is shared among the selected organisations. The creator decides permission levels)",
                "requestBody": {
                    "description": "Uses the ProjectCreationShell schema. Note: project names are obfuscated before storage.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Projects/Projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Returns a list of projects",
                "parameters": [
                    {
                        "name": "includeSectors",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "includeTypes",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayProject"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayProject"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DisplayProject"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Projects/ModifyProject": {
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Modifies core project details, where these have changed. Leave fields blank to not modify thier contents",
                "description": "Sample request:\r\n\r\n    PUT /ModifyProject\r\n    {        \r\n      \"name\": \"MyProject\",\r\n      \"handoverDate\": \"2021-01-01T10:00:00\",\r\n      \"accessType\": \"shared\",\r\n      \"region\": \"West Midlands\",\r\n      \"yourReferenceKey\": \"MyKey\"\r\n    }\r\n    \r\nSecurity options are: \r\n- anonymised benchmark (data is used anonymously for benchmarking). This is the default.\r\n- public (all data is shared)\r\n- private (data is only visible by creator company)\r\n- shared (data is shared among the selected organisations. The creator decides permission levels)",
                "requestBody": {
                    "description": "Uses the ProjectModificationShell schema. Note: project names are obfuscated before storage.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/DeleteRangeBenchmark": {
            "delete": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Deletes a range benchmark",
                "parameters": [
                    {
                        "name": "benchmarkId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/DeleteRangeZone": {
            "delete": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Deletes a zone from an existing benchmark",
                "parameters": [
                    {
                        "name": "zoneId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/DetermineDisplayScale": {
            "get": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Determines X, where x is a 1:X pixel ratio. Used for svg representations of benchmarks",
                "parameters": [
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The number of pixels wide the banchmark will be when displayed. Does not account for padding",
                        "schema": {
                            "type": "integer",
                            "description": "The number of pixels wide the banchmark will be when displayed. Does not account for padding",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rangeStart",
                        "in": "query",
                        "description": "The x axis coordinate of the graph start point",
                        "schema": {
                            "type": "number",
                            "description": "The x axis coordinate of the graph start point",
                            "format": "double"
                        }
                    },
                    {
                        "name": "rangeEnd",
                        "in": "query",
                        "description": "The x axis coordinate of the graph end point",
                        "schema": {
                            "type": "number",
                            "description": "The x axis coordinate of the graph end point",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/RangeBenchmark": {
            "get": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Gets a range benchmark",
                "parameters": [
                    {
                        "name": "benchmarkId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BenchmarkFrame"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BenchmarkFrame"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BenchmarkFrame"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/RangeBenchmarks": {
            "get": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Gets all range benchmarks",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BenchmarkFrame"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BenchmarkFrame"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BenchmarkFrame"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/AddRangeBenchmark": {
            "post": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Adds a range benchmark",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/RangeBenchmarks/ModifyBenchmark": {
            "put": {
                "tags": [
                    "RangeBenchmarks"
                ],
                "summary": "Imdepotent modifiction. This will update benchmarks and the zones within, adding new zones if included in the calling model, but does not delete anything. Please call DeleteRangeZone to remove zones",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RangeBenchmarkModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Regions/GetRegionList": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Retrive the list of possible region locations. Optionally, also get some points of interest, such as cities and large towns, in that region",
                "parameters": [
                    {
                        "name": "includePointsOfInterest",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LuRegion"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LuRegion"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LuRegion"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/RemoveProjectSector": {
            "delete": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Remove a sector from a project. Will; also remove any types which are no longer valid.",
                "parameters": [
                    {
                        "name": "projectSectorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/RemoveProjectType": {
            "delete": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Removes a typology from a porject. If you need ids to call with this, call GetProjectSectorsAndTypes first.",
                "parameters": [
                    {
                        "name": "projectTypeId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetBundle": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "A bundle of all valid sectors, all valid types and all the sector-type mappings. Designed for front end component use",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetProjectSectorsAndTypes": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Retrives a list of sectors and types for a given project. Also returns the project name, if this is shared.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSectorsAndTypes"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSectorsAndTypes"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSectorsAndTypes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetSectorsList": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Returns a list of all sectors",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuSectors"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetTypesInSectorsList": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Returns a list of all sector to type mappings that the system considers valid",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetTypesList": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Returns a list of all types",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuTypes"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuTypes"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LuTypes"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/GetVaildTypesInSector": {
            "get": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "summary": "Gets the vaild typeologies for a sector",
                "parameters": [
                    {
                        "name": "sectorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "description": "",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypesInSectors"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/AddSectorsAndTypesToProject": {
            "put": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SectorsAndTypologies/RemoveSectorsAndTypesFromProject": {
            "put": {
                "tags": [
                    "SectorsAndTypologies"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectorTypeShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/Sessions/DeleteSession": {
            "delete": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Removes a session and all its associated data. Please be sure before you call this endpoint - data cannot be recovered",
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Sessions/GetAnalyticsSessions": {
            "get": {
                "tags": [
                    "Sessions"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/Sessions/GetProjectSessionBundle": {
            "get": {
                "tags": [
                    "Sessions"
                ],
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Sessions/Session": {
            "get": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Gets the session data",
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplaySession"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Sessions/AddSessionToProject": {
            "post": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Adds a session to an existing project. You must add sessions to valid projects",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionCreationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionCreationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionCreationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionCreationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Sessions/SetAnalyticsSessions": {
            "post": {
                "tags": [
                    "Sessions"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAnalyticsSessionsShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAnalyticsSessionsShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAnalyticsSessionsShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAnalyticsSessionsShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/Sessions/UpdateSession": {
            "put": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Updates session details. Requires the session key",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionModifictionShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionModifictionShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionModifictionShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionModifictionShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StaticCarbonFactors/DeleteOtherCarbonFactor": {
            "delete": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "summary": "Removes a user added carbon factor for a non-system-default fuel type. Please pass in the specific id (you can call the GET method to see these listed).",
                "parameters": [
                    {
                        "name": "otherCarbonFactorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StaticCarbonFactors/DeleteStaticCarbonFactorSet": {
            "delete": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "summary": "Removes the entire carbon factor set",
                "parameters": [
                    {
                        "name": "carbonFactorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StaticCarbonFactors/GetStaticCarbonFactorSet": {
            "get": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "summary": "Retrives a static carbon factor set. If you share a project that contains a set you wouldn't normally have access to \r\nwith another organisation, please supply the project id here to allow the system to grant you access",
                "description": "System or organisation-wise sets will have a ForProject field of Guid.Empty (00000000-0000-0000-0000-000000000000).",
                "parameters": [
                    {
                        "name": "staticCarbonFactorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaticCarbonFactors"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaticCarbonFactors"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaticCarbonFactors"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StaticCarbonFactors/ListAllAvailableFactors": {
            "get": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/StaticCarbonFactors/AddStaticCarbonFactorSet": {
            "post": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "summary": "Add a new static (not timebound) carbon factor set. Admin organisations can add common sets to the enitre API.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StaticCarbonFactors/ModifyStaticCarbonFactorSet": {
            "put": {
                "tags": [
                    "StaticCarbonFactors"
                ],
                "summary": "Modfiy a static carbon factor set. Note, this will only add to or modfiy exisiting data. Please use delete actions to remove additional carbon factors, or the entire set",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorModificationShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorModificationShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorModificationShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaticCarbonFactorModificationShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TimeBoundCarbonFactors/DeleteTimeBoundCarbonFactor": {
            "delete": {
                "tags": [
                    "TimeBoundCarbonFactors"
                ],
                "summary": "Deletes a time-bound carbon factor set",
                "parameters": [
                    {
                        "name": "setId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TimeBoundCarbonFactors/DeleteYearlyCarbonFactor": {
            "delete": {
                "tags": [
                    "TimeBoundCarbonFactors"
                ],
                "summary": "Deletes an individual year in a set",
                "parameters": [
                    {
                        "name": "yearlyCarbonFactorId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "description": "",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TimeBoundCarbonFactors/AddTimeBoundCarbonFactor": {
            "post": {
                "tags": [
                    "TimeBoundCarbonFactors"
                ],
                "summary": "Add a time-bound carbon factor set",
                "description": "If 'ExtrapolateToFillGaps' is true, then any missing years are extrapolated from the nearest years either side. \r\nIf it's false, the system will leave any gaps intact.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeBoundCarbonFactorShell"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeBoundCarbonFactorShell"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeBoundCarbonFactorShell"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeBoundCarbonFactorShell"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TimeBoundCarbonFactors/ModifyOrAddYearlyCarbonFactor": {
            "put": {
                "tags": [
                    "TimeBoundCarbonFactors"
                ],
                "summary": "Adds or modifies an individual year in a time-bound carbon factor set",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/YearlyCarbonFactorModifcation"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/YearlyCarbonFactorModifcation"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/YearlyCarbonFactorModifcation"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/YearlyCarbonFactorModifcation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationOutcome"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnalyticSession": {
                "type": "object",
                "properties": {
                    "sessionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "readingType": {
                        "type": "string",
                        "nullable": true
                    },
                    "electricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "nonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "renewableUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "calculatedEnergyCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "isSelectedSession": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ProjectAnalyticsBundle": {
                "type": "object",
                "properties": {
                    "analyticsSessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnalyticSession"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SectorInput": {
                "type": "object",
                "properties": {
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sectorName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TypeInput": {
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "typeName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EnergyAnalyticsFilters": {
                "type": "object",
                "properties": {
                    "useDesignStageRecords": {
                        "type": "boolean"
                    },
                    "scaleVariable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "useCommonDecData": {
                        "type": "boolean"
                    },
                    "maxRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxDecRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "validSectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorInput"
                        },
                        "nullable": true
                    },
                    "validTypologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeInput"
                        },
                        "nullable": true
                    },
                    "validYears": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "minGia": {
                        "type": "number",
                        "format": "double"
                    },
                    "maxGia": {
                        "type": "number",
                        "format": "double"
                    },
                    "allGias": {
                        "type": "boolean"
                    },
                    "allYears": {
                        "type": "boolean"
                    },
                    "allSectors": {
                        "type": "boolean"
                    },
                    "allTypes": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "CumulativeDataUnit": {
                "type": "object",
                "properties": {
                    "energy": {
                        "type": "number",
                        "format": "double"
                    },
                    "cumulativePercentageElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "cumulativePercentageNonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "cumulativePercentageRenewables": {
                        "type": "number",
                        "format": "double"
                    },
                    "cumulativePercentageTotal": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "HistogramDataUnit": {
                "type": "object",
                "properties": {
                    "rangeStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "rangeEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Histogram": {
                "type": "object",
                "properties": {
                    "electricHistogram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistogramDataUnit"
                        },
                        "nullable": true
                    },
                    "nonElectricHistogram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistogramDataUnit"
                        },
                        "nullable": true
                    },
                    "renewableHistogram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistogramDataUnit"
                        },
                        "nullable": true
                    },
                    "totalHistogram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistogramDataUnit"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AuthBundle": {
                "type": "object",
                "properties": {
                    "appIdent": {
                        "type": "string",
                        "nullable": true
                    },
                    "apiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "claimantSid": {
                        "type": "string",
                        "nullable": true
                    },
                    "claimantName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TokenBundle": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "ProjectCollaboratorCreationShell": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "permissionLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyReferenceForProject": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "CreationOutcome": {
                "type": "object",
                "properties": {
                    "createdOk": {
                        "type": "boolean"
                    },
                    "resourceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "resourceUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectCollaboratorModificationShell": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "permissionLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyReferenceForProject": {
                        "type": "string",
                        "nullable": true
                    },
                    "collaboratorInstanceId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "ModificationOutcome": {
                "type": "object",
                "properties": {
                    "modifiedOk": {
                        "type": "boolean"
                    },
                    "resourceUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "modifiedTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CommonFilters": {
                "type": "object",
                "properties": {
                    "useDesignStageRecords": {
                        "type": "boolean"
                    },
                    "maxRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxDecRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "validSectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorInput"
                        },
                        "nullable": true
                    },
                    "validTypologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeInput"
                        },
                        "nullable": true
                    },
                    "validYears": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "minGia": {
                        "type": "number",
                        "format": "double"
                    },
                    "maxGia": {
                        "type": "number",
                        "format": "double"
                    },
                    "allGias": {
                        "type": "boolean"
                    },
                    "allYears": {
                        "type": "boolean"
                    },
                    "allSectors": {
                        "type": "boolean"
                    },
                    "allTypes": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "LuSectors": {
                "type": "object",
                "properties": {
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SectorsInCommonDecData": {
                "type": "object",
                "properties": {
                    "sectorsInCommonDecDataId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "commonDecDataId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sector": {
                        "$ref": "#/components/schemas/LuSectors"
                    }
                },
                "additionalProperties": false
            },
            "LuTypes": {
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TypesInCommonDecData": {
                "type": "object",
                "properties": {
                    "typesInCommonDecDataId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "commonDecDataId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/LuTypes"
                    }
                },
                "additionalProperties": false
            },
            "CommonDecData": {
                "type": "object",
                "properties": {
                    "commonDecDataId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "siteOrGroupName": {
                        "type": "string",
                        "nullable": true
                    },
                    "buildingName": {
                        "type": "string",
                        "nullable": true
                    },
                    "decBuildingRef": {
                        "type": "string",
                        "nullable": true
                    },
                    "decNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "readingDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalAnnualElectricityUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalAnnualNonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalRenewableContribution": {
                        "type": "number",
                        "format": "double"
                    },
                    "operationalEnergyTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "postcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "regionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorsInCommonDecData"
                        },
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypesInCommonDecData"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectSession": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "calculationSoftware": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "isDesignStage": {
                        "type": "boolean"
                    },
                    "isFinalDesign": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "EmbodiedCarbonFigures": {
                "type": "object",
                "properties": {
                    "embodiedCarbonFiguresId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "totalEmbodiedCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThreeSequestered": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "bOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "bFourAndFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "cOneToFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "d": {
                        "type": "number",
                        "format": "double"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "session": {
                        "$ref": "#/components/schemas/ProjectSession"
                    },
                    "figuresAreValid": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "EmbodiedCarbonCreationShell": {
                "type": "object",
                "properties": {
                    "totalEmbodiedCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThreeSequestered": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "bOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "bFourAndFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "cOneToFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "d": {
                        "type": "number",
                        "format": "double"
                    },
                    "componentsCalculateTotal": {
                        "type": "boolean"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "EmbodiedCarbonModificationShell": {
                "type": "object",
                "properties": {
                    "totalEmbodiedCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "aOneToThreeSequestered": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "aFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "bOneToThree": {
                        "type": "number",
                        "format": "double"
                    },
                    "bFourAndFive": {
                        "type": "number",
                        "format": "double"
                    },
                    "cOneToFour": {
                        "type": "number",
                        "format": "double"
                    },
                    "d": {
                        "type": "number",
                        "format": "double"
                    },
                    "componentsCalculateTotal": {
                        "type": "boolean"
                    },
                    "embodiedCarbonFiguresId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "ProjectGroupSectors": {
                "type": "object",
                "properties": {
                    "projectGroupSectorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sector": {
                        "$ref": "#/components/schemas/LuSectors"
                    },
                    "isPrimarySector": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ProjectGroupTypes": {
                "type": "object",
                "properties": {
                    "projectGroupTypeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/LuTypes"
                    }
                },
                "additionalProperties": false
            },
            "DisplayGroup": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupName": {
                        "type": "string",
                        "nullable": true
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "sectorsAndTypesOverwriteProject": {
                        "type": "boolean"
                    },
                    "groupSectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectGroupSectors"
                        },
                        "nullable": true
                    },
                    "groupTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectGroupTypes"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SectorShell": {
                "type": "object",
                "properties": {
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sectorName": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPrimary": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "TypeShell": {
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "typeName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "GroupCreationShell": {
                "type": "object",
                "properties": {
                    "groupName": {
                        "type": "string",
                        "nullable": true
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "sectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorShell"
                        },
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeShell"
                        },
                        "nullable": true
                    },
                    "autoUpdateProjectSectorsAndTypes": {
                        "type": "boolean"
                    },
                    "groupSectorTypesOverrideProjectOnes": {
                        "type": "boolean"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "GroupAdditionPreferences": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sessionAdoptsGroupGia": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "GroupModificationShell": {
                "type": "object",
                "properties": {
                    "groupName": {
                        "type": "string",
                        "nullable": true
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "sectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorShell"
                        },
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeShell"
                        },
                        "nullable": true
                    },
                    "autoUpdateProjectSectorsAndTypes": {
                        "type": "boolean"
                    },
                    "groupSectorTypesOverrideProjectOnes": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "OperationalEnergyCarbon": {
                "type": "object",
                "properties": {
                    "carbonUseable": {
                        "type": "boolean"
                    },
                    "electricCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "nonElectricCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCarbon": {
                        "type": "number",
                        "format": "double"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OperationalEnergyComponentModification": {
                "type": "object",
                "properties": {
                    "use": {
                        "type": "string",
                        "nullable": true
                    },
                    "amountConsumedOrGenerated": {
                        "type": "number",
                        "format": "double"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "componentId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "FuelMix": {
                "type": "object",
                "properties": {
                    "fuelTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fuelType": {
                        "type": "string",
                        "nullable": true
                    },
                    "mixAmount": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "FuelPoweredEnergyComponentModification": {
                "type": "object",
                "properties": {
                    "use": {
                        "type": "string",
                        "nullable": true
                    },
                    "amountConsumedOrGenerated": {
                        "type": "number",
                        "format": "double"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "componentValid": {
                        "type": "boolean"
                    },
                    "componentId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fuelMix": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FuelMix"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EnergyReadings": {
                "type": "object",
                "properties": {
                    "operationalEnergyReadingId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "readingsAreValid": {
                        "type": "boolean"
                    },
                    "totalElectricityUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalNonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalRenewableContribution": {
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponentModification"
                        },
                        "nullable": true
                    },
                    "nonElectricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FuelPoweredEnergyComponentModification"
                        },
                        "nullable": true
                    },
                    "powerGenerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponentModification"
                        },
                        "nullable": true
                    },
                    "electricComponentTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "nonElectricComponentTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "renewableComponentTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "selectedCarbonFactor": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "OperationalEnergyComponent": {
                "type": "object",
                "properties": {
                    "use": {
                        "type": "string",
                        "nullable": true
                    },
                    "amountConsumedOrGenerated": {
                        "type": "number",
                        "format": "double"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FuelPoweredEnergyComponent": {
                "type": "object",
                "properties": {
                    "use": {
                        "type": "string",
                        "nullable": true
                    },
                    "amountConsumedOrGenerated": {
                        "type": "number",
                        "format": "double"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "fuelMix": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FuelMix"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OperationalEnergyCreationShell": {
                "required": [
                    "sessionId"
                ],
                "type": "object",
                "properties": {
                    "totalElectricityUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalNonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalRenewableContribution": {
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "carbonFactorGapMode": {
                        "type": "string",
                        "nullable": true
                    },
                    "carbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "electricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponent"
                        },
                        "nullable": true
                    },
                    "nonElectricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FuelPoweredEnergyComponent"
                        },
                        "nullable": true
                    },
                    "powerGenerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponent"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OperationalEnergyModificationShell": {
                "required": [
                    "operationalEnergyReadingId"
                ],
                "type": "object",
                "properties": {
                    "totalElectricityUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalNonElectricUse": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalRenewableContribution": {
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "carbonFactorGapMode": {
                        "type": "string",
                        "nullable": true
                    },
                    "carbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "operationalEnergyReadingId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "electricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponentModification"
                        },
                        "nullable": true
                    },
                    "nonElectricEnergyConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FuelPoweredEnergyComponentModification"
                        },
                        "nullable": true
                    },
                    "powerGenerators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalEnergyComponentModification"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectTypes": {
                "type": "object",
                "properties": {
                    "projectTypeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/LuTypes"
                    }
                },
                "additionalProperties": false
            },
            "Project": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "groupTypesOrSectorsMisaligned": {
                        "type": "boolean"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "creatorCompanyRef": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectSectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectSectors"
                        },
                        "nullable": true
                    },
                    "projectTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectTypes"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectSectors": {
                "type": "object",
                "properties": {
                    "projectSectorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "$ref": "#/components/schemas/Project"
                    },
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sector": {
                        "$ref": "#/components/schemas/LuSectors"
                    },
                    "isPrimarySector": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "DisplayCompaniesOnProject": {
                "type": "object",
                "properties": {
                    "permissionLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DisplaySession": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "calculationSoftware": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "isDesignStage": {
                        "type": "boolean"
                    },
                    "isFinalDesign": {
                        "type": "boolean"
                    },
                    "methodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "sessionDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "energyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "carbonId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "DisplayProject": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "groupTypesOrSectorsMisaligned": {
                        "type": "boolean"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "creatorCompanyRef": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectSectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectSectors"
                        },
                        "nullable": true
                    },
                    "projectTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectTypes"
                        },
                        "nullable": true
                    },
                    "referenceKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "handoverDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "accessType": {
                        "type": "string",
                        "nullable": true
                    },
                    "companiesOnProject": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplayCompaniesOnProject"
                        },
                        "nullable": true
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplaySession"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectCollaboratorShell": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "permissionLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyReferenceForProject": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectCreationShell": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "handoverDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "accessType": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "sharedWith": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectCollaboratorShell"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "ProjectModificationShell": {
                "required": [
                    "projectId"
                ],
                "type": "object",
                "properties": {
                    "handoverDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "accessType": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BenchmarkZone": {
                "required": [
                    "zoneEnd",
                    "zoneName",
                    "zoneStart"
                ],
                "type": "object",
                "properties": {
                    "zoneStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneName": {
                        "type": "string"
                    },
                    "zoneColour": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneOpacity": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "BenchmarkFrame": {
                "type": "object",
                "properties": {
                    "benchmarkName": {
                        "type": "string",
                        "nullable": true
                    },
                    "validRangeStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "validRangeEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "benchmarkFor": {
                        "type": "string",
                        "nullable": true
                    },
                    "units": {
                        "type": "string",
                        "nullable": true
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BenchmarkZone"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "RangeBenchmarkZoneShell": {
                "required": [
                    "zoneEnd",
                    "zoneName",
                    "zoneStart"
                ],
                "type": "object",
                "properties": {
                    "zoneStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneName": {
                        "type": "string"
                    },
                    "zoneColour": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneOpacity": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "RangeBenchmarkCreationShell": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "validRangeStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "validRangeEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RangeBenchmarkZoneShell"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "RangeBenchmarkZoneModificationShell": {
                "required": [
                    "zoneEnd",
                    "zoneName",
                    "zoneStart"
                ],
                "type": "object",
                "properties": {
                    "zoneStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneName": {
                        "type": "string"
                    },
                    "zoneColour": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneOpacity": {
                        "type": "number",
                        "format": "double"
                    },
                    "zoneId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "RangeBenchmarkModificationShell": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "validRangeStart": {
                        "type": "number",
                        "format": "double"
                    },
                    "validRangeEnd": {
                        "type": "number",
                        "format": "double"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RangeBenchmarkZoneModificationShell"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PointsOfInterestInRegions": {
                "type": "object",
                "properties": {
                    "pointOfInterestId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pointOfInterestName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LuRegion": {
                "type": "object",
                "properties": {
                    "regionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "regionName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pointsOfInterest": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PointsOfInterestInRegions"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProjectSectorsAndTypes": {
                "type": "object",
                "properties": {
                    "projectName": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LuTypes"
                        },
                        "nullable": true
                    },
                    "sectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LuSectors"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TypesInSectors": {
                "type": "object",
                "properties": {
                    "typeInSectorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "SectorTypeShell": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SectorShell"
                        },
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeShell"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SessionCreationShell": {
                "required": [
                    "grossInternalArea",
                    "projectId",
                    "sessionDate"
                ],
                "type": "object",
                "properties": {
                    "sessionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "readingMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "calculationSoftware": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "isDesign": {
                        "type": "boolean"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "AnalyticsSessionShell": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "ProjectAnalyticsSessionsShell": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "analyticsSessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnalyticsSessionShell"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SessionModifictionShell": {
                "required": [
                    "grossInternalArea",
                    "sessionDate",
                    "sessionId"
                ],
                "type": "object",
                "properties": {
                    "sessionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "readingMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "calculationSoftware": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "grossInternalArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "isDesign": {
                        "type": "boolean"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "AdditionalStaticCarbonFactors": {
                "type": "object",
                "properties": {
                    "additionalCarbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "staticCarbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "additionalMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "additionalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "additionalFuelName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "StaticCarbonFactors": {
                "type": "object",
                "properties": {
                    "staticCarbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "forProject": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "setName": {
                        "type": "string",
                        "nullable": true
                    },
                    "electricityCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricityFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "oilCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "oilFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "gasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biodieselFromBiomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biodieselFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "coalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "coalFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biomassFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biogasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biogasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "additionalStaticCarbonFactors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdditionalStaticCarbonFactors"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OtherStaticCarbonFactor": {
                "type": "object",
                "properties": {
                    "otherFuelName": {
                        "type": "string",
                        "nullable": true
                    },
                    "otherCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "otherFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "StaticCarbonFactorShell": {
                "type": "object",
                "properties": {
                    "systemWideAddition": {
                        "type": "boolean"
                    },
                    "setName": {
                        "type": "string",
                        "nullable": true
                    },
                    "electricityCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricityFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "oilCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "oilFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "gasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biodieselFromBiomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biodieselFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "coalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "coalFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biomassFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biogasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biogasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "specificProjectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "otherCarbonFactors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OtherStaticCarbonFactor"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OtherStaticCarbonFactorModification": {
                "type": "object",
                "properties": {
                    "otherFuelName": {
                        "type": "string",
                        "nullable": true
                    },
                    "otherCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "otherFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "otherCarbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "StaticCarbonFactorModificationShell": {
                "type": "object",
                "properties": {
                    "systemWideAddition": {
                        "type": "boolean"
                    },
                    "setName": {
                        "type": "string",
                        "nullable": true
                    },
                    "electricityCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricityFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "oilCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "oilFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "gasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biodieselFromBiomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biodieselFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "coalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "coalFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biomassFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biogasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biogasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "specificProjectId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "otherCarbonFactors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OtherStaticCarbonFactorModification"
                        },
                        "nullable": true
                    },
                    "carbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "YearlyCarbonFactor": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "electricityCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricityFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "oilCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "oilFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "gasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biodieselFromBiomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biodieselFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "coalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "coalFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biomassFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biogasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biogasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TimeBoundCarbonFactorShell": {
                "type": "object",
                "properties": {
                    "carbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "setName": {
                        "type": "string",
                        "nullable": true
                    },
                    "systemWideAddition": {
                        "type": "boolean"
                    },
                    "extrapolateToFillGaps": {
                        "type": "boolean"
                    },
                    "yearlyCarbonFactors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/YearlyCarbonFactor"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "YearlyCarbonFactorModifcation": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "electricityCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "electricityFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "oilCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "oilFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "gasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biodieselFromBiomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biodieselFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "coalCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "coalFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomassCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biomassFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "biogasCarbonFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "biogasFactorMethodology": {
                        "type": "string",
                        "nullable": true
                    },
                    "yearlyCarbonFactorId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "timeBoundSetId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            }
        }
    }
}