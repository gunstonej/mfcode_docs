# generated by datamodel-codegen:
#   filename:  project.schema.json
#   timestamp: 2021-03-25T14:48:07+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field


class CarbonFactorUnit(BaseModel):
    ElectricityCarbonFactor: float = Field(..., title='Electricity Carbon Factor')
    ElectricityMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Electricity Carbon Methodology',
    )
    GasCarbonFactor: float = Field(..., title='Gas Carbon Factor')
    GasMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Gas Carbon Methodology',
    )
    OilCarbonFactor: float = Field(..., title='Oil Carbon Factor')
    OilMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Oil Carbon Methodology',
    )
    BiodieselFromBiomassCarbonFactor: float = Field(
        ..., title='Biodiesel Carbon Factor'
    )
    BiodieselMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Biodiesel Carbon Methodology',
    )
    CoalCarbonFactor: float = Field(..., title='Coal Carbon Factor')
    CoalMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Coal Carbon Methodology',
    )
    BiomassCarbonFactor: float = Field(..., title='Biomass Carbon Factor')
    BiomassMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Biomass Carbon Methodology',
    )
    BiogasCarbonFactor: float = Field(..., title='Biogas Carbon Factor')
    BiogasMethodology: str = Field(
        ...,
        description='Default is derived from SAP10.1 for the session year',
        title='Biogas Carbon Methodology',
    )


class Fuel(BaseModel):
    FuelName: str = Field(..., title='Fuel Name')
    PercentageOfTotal: float = Field(..., title='Percentage of total')


class ProjectCollaboratorUnit(BaseModel):
    CollaboratorId: str = Field(
        ...,
        description='The id for the user or company collaborating on the project',
        title='Collaborator Id',
    )
    CollaboratorName: str = Field(..., title='Name')
    CollaboratorType: str = Field(
        ...,
        description='The type of collaborator. See /lookups/collaboratorTypes',
        title='Type',
    )
    RoleOnProject: str = Field(
        ...,
        description='The role of the collaborator. See /lookups/collaboratorRoles',
        title='Role',
    )
    CollaboratorReferenceForProject: Optional[str] = Field(
        ..., title='Collaborator Reference'
    )
    AddedOn: datetime = Field(..., title='Added On')
    BaseAccessLevel: str = Field(
        ...,
        description='The maximum level of access this collaborator has to the project. See /security for more details',
        title='Base Access Level',
    )
    IsCreator: bool = Field(..., title='Project creator?')


class StructureUnit(BaseModel):
    StructureId: str = Field(..., title='Structure id')
    StructureName: str = Field(..., title='Name')
    StructureGIA: float = Field(
        ...,
        description='The Gross Internal Area for this structure',
        title='Gross Internal Area (GIA)',
    )
    Occupancy: int = Field(..., description='Occupancy')
    Sectors: List[Optional[str]] = Field(
        ..., description='Based on CIBSE Guide F. See /Lookups/Sectors'
    )
    Types: List[Optional[str]] = Field(
        ...,
        description='Based on CIBSE Guide F. See /Lookups/Types. Types that do not belong to the sectors selected will not be displayed.',
    )
    Tags: List[Optional[str]] = Field(
        ..., description='All the tags applied to this structure'
    )


class Unit(BaseModel):
    UnitString: str = Field(..., title='Unit')


class EmbodiedCarbonComponent(BaseModel):
    ComponentName: str = Field(..., title='Component Name')
    Units: Unit
    ComponentValue: float = Field(..., title='Component Value')
    SequestersCarbon: bool = Field(..., title='Sequesters Carbon')


class OperationalEnergyComponent(BaseModel):
    ComponentName: str = Field(..., title='Component name')
    Units: Unit
    ComponentValue: float = Field(..., title='Component value')
    GeneratesPower: bool = Field(..., title='Generates power')
    FuelMix: List[Fuel] = Field(
        ...,
        description='Optional. See /lookups/FuelTypes. The mix total must equal 100%',
    )


class OperationalEnergySection(BaseModel):
    SectionName: Optional[str] = Field(..., title='Section name')
    AllowsCustomComponents: bool = Field(
        ...,
        description='Custom components are only valid in sections where this is true',
        title='Custom Comnponents Allowed',
    )
    Components: List[OperationalEnergyComponent]


class EmbodiedCarbonBreakdown(BaseModel):
    SectionName: str = Field(..., title='Section Name')
    AllowsCustomComponents: bool = Field(
        ...,
        description='You can only add custom components to sections where this is true',
    )
    Components: List[EmbodiedCarbonComponent]


class OperationalEnergyBreakdown(BaseModel):
    Sections: List[OperationalEnergySection]


class SessionUnit(BaseModel):
    SessionId: str
    SessionDate: datetime = Field(..., title='Session date')
    GrossInternalFloorArea: float = Field(
        ...,
        description='Overriden by structure GIA, if supplied',
        title='Gross Internal Area (GIA)',
    )
    Occupancy: float = Field(
        ..., description='Estimated or actual building occupancy', title='Occupancy'
    )
    StructureId: Optional[str] = Field(
        ...,
        description='If supplied, provides occupancy and GIA',
        title='Session Structure (optional)',
    )
    Methodology: str = Field(..., description='See /lookups/ReadingMethodologies')
    Workstage: str = Field(..., description='See /lookups/Workstages')
    CalculationSoftware: Optional[str] = Field(..., title='Calculation Software')
    Notes: Optional[str]
    TotalAnnualElectricityUse: float = Field(
        ..., description='Unit: kWh/m2.y', title='Total Annual Electricity Use'
    )
    TotalNonElectricEnergyUse: float = Field(
        ..., description='Unit: kWh/m2.y', title='Total Non-Electric Energy Use'
    )
    TotalRenewableContribution: float = Field(
        ..., description='Unit: kWh/m2.y', title='Total Renewable Contribution'
    )
    OperationalEnergyTotal: float = Field(
        ..., description='Unit: kWh/m2.y', title='Operational Energy Total'
    )
    OperationalEnergyCarbon: float = Field(
        ..., description='Unit: kgCO2e', title='Operational Energy Carbon'
    )
    OperationalEnergyBreakdown: OperationalEnergyBreakdown
    TotalEmbodiedCarbon: float = Field(
        ..., description='Unit: kgCO2e', title='Total Embodied Carbon'
    )
    EmbodiedCarbonBreakdown: EmbodiedCarbonBreakdown
    PotableWaterUse: float = Field(
        ..., description='Unit: m3', title='Potable water use'
    )
    CarbonFactors: CarbonFactorUnit


class Project(BaseModel):
    ProjectId: str = Field(..., title='Project Id')
    IsPublic: bool = Field(
        ...,
        description="If the project's data is publicly available for benchmarking and comparison",
        title='Public project?',
    )
    IsLocked: bool = Field(
        ...,
        description="If the project's data is locked, it can no longer be edited",
        title='Project locked?',
    )
    ClientName: str = Field(
        ...,
        description='The client or common name for the project',
        title='Client/common name',
    )
    YourReferenceCode: Optional[str] = Field(
        ...,
        description='Your internal reference code for this project',
        title='Your reference code',
    )
    Aliases: List[Optional[str]] = Field(
        ..., description='Your aliases for the project', title='Project aliases'
    )
    Collaborators: List[ProjectCollaboratorUnit] = Field(
        ..., description='A list of contributors and viewers for this project'
    )
    HandoverDate: datetime = Field(..., title='Handover date')
    EnvironmentalStrategy: Optional[str] = Field(
        ...,
        description='See /Lookups/EnvironmentalStrategies',
        title='Environmental strategy',
    )
    GrossInternalFloorArea: float = Field(
        ...,
        description='The GIA for the entire project footprint. Unit: m2',
        title='Gross Internal Area (GIA)',
    )
    Sessions: List[SessionUnit] = Field(..., title='Sessions')
    Structures: List[StructureUnit] = Field(
        ...,
        description='The individual buildings or structure groups that make up the project.',
    )
    Sectors: List[Optional[str]] = Field(
        ..., description='Based on CIBSE Guide F. See /Lookups/Sectors'
    )
    Types: List[Optional[str]] = Field(
        ...,
        description='Based on CIBSE Guide F. See /Lookups/Types. Types that do not belong to the sectors selected will not be displayed.',
    )
    Tags: List[Optional[str]] = Field(
        ..., description='All the tags applied to this project'
    )
